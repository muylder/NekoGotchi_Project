name: Build M5Gotchi Pro

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment:
          - m5stack-core-esp32
          - m5stack-fire
          - m5stack-core2
          
    steps:
    - uses: actions/checkout@v3
    
    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: |
          ~/.platformio
          .pio
        key: ${{ runner.os }}-pio-${{ hashFiles('**/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-pio-
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
    
    - name: Build firmware
      run: |
        pio run -e ${{ matrix.environment }}
    
    - name: Prepare artifacts
      run: |
        mkdir -p artifacts
        cp .pio/build/${{ matrix.environment }}/firmware.bin artifacts/M5Gotchi_Pro_${{ matrix.environment }}.bin
        if [ -f .pio/build/${{ matrix.environment }}/bootloader.bin ]; then
          cp .pio/build/${{ matrix.environment }}/bootloader.bin artifacts/bootloader_${{ matrix.environment }}.bin
        fi
        if [ -f .pio/build/${{ matrix.environment }}/partitions.bin ]; then
          cp .pio/build/${{ matrix.environment }}/partitions.bin artifacts/partitions_${{ matrix.environment }}.bin
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: firmware-${{ matrix.environment }}
        path: artifacts/
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Create release zip
      run: |
        mkdir release
        cp -r firmware-*/* release/
        cd release && zip -r ../M5Gotchi_Pro_Binaries.zip *
    
    - name: Upload to release
      uses: softprops/action-gh-release@v1
      with:
        files: M5Gotchi_Pro_Binaries.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
